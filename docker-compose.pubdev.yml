version: '2.1'
services:
  #######################################
  # PHP Backoffice API Docker container
  #######################################
  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    image: dev_workspace
    container_name: ddc_backofficeapi
    links:
      - mariadb
      - redis
    ports:
      - "10080:80"
    expose:
      - "80"
      - "443"
      - "4200"
      - "9000"
    volumes:
      - ../_htdocs_ddc/ddc_api:/app/
      - ./:/docker/
      - ./etc/php/development.ini:/opt/docker/etc/php/development.ini
    # cap and privileged needed for slowlog
    cap_add:
      - SYS_PTRACE
    privileged: true
    env_file:
      - etc/environment.yml
      - etc/environment.development.yml
    mem_limit: 300m
    networks:
      default:
        ipv4_address: 172.18.0.100
    restart: unless-stopped

  cron:
    extends:
      file: common-services.yml
      service: beego
    container_name: ddc_cron
    ports:
      - "8099:8099"
    mem_limit: 100m
    networks:
      default:
        ipv4_address: 172.18.0.99
    working_dir: "/go/src/ddc_cron"
    entrypoint: "./run.sh"

  #######################################
  # DDC Backoffice Angular Front
  #######################################
#   backoffice:
#     image: jojomi/nginx-static
#     container_name: ddc_backoffice
#     volumes:
#       - ./:/docker/
#       - ./etc/nginx-static/default.conf:/etc/nginx/sites-enabled/default.conf
#       - ../_htdocs_ddc/ddc_backoffice_dev_build:/var/www:ro
# #      - ../_htdocs_ddc/ddc_backoffice/dist:/var/www:ro
#     ports:
#       - 3000:80
#     mem_limit: 100m
#     environment:
#       - WEB_DOCUMENT_ROOT=/var/www/dist
#     networks:
#       default:
#         ipv4_address: 172.18.0.50
#     restart: unless-stopped

  #######################################
  # DDC React Frontend
  #######################################
  app:
    image: jojomi/nginx-static
    container_name: ddc_app
    volumes:
      - ./:/docker/
      - ./etc/nginx-static/default.conf:/etc/nginx/sites-enabled/default.conf
      - ../_htdocs_ddc/ddc_app_build:/var/www:ro
    ports:
      - 10081:80
    mem_limit: 100m
    networks:
      default:
        ipv4_address: 172.18.0.51

  #######################################
  # MariaDB server
  #######################################
  mariadb:
    build:
      context: docker/mariadb/
      dockerfile: MariaDB-10.2.8.Dockerfile
    image: ddc_mariadb
    container_name: ddc_mariadb
    ports:
      - 3308:3306
    volumes:
      - mariadb:/var/lib/mysql
      - ./etc/mariadb/z999-docker1.cnf:/etc/mysql/conf.d/z999-docker.cnf
      - ./backup:/storage
    env_file:
      - etc/environment.yml
    mem_limit: 1g
    networks:
      default:
        ipv4_address: 172.18.0.52
    restart: unless-stopped

  #######################################
  # KrakenD
  #######################################
  krakend:
    image: devopsfaith/krakend:config-watcher
    container_name: ddc_krakend
    ports:
      - "18080:8080"
    environment:
      KRAKEND_CONFIG: "krakend.json"
    mem_limit: 100m
    volumes:
      - ./:/docker/
      - ./etc/krakend:/etc/krakend
    networks:
      default:
        ipv4_address: 172.18.0.59
    extra_hosts:
      - "service01:172.18.0.1"
      - "service02:172.18.0.1"
      - "servicestaging01:172.18.0.1"
    restart: always

  #######################################
  # DDC Services
  #######################################
  article:
    extends:
      file: common-services.yml
      service: beego
    container_name: ddc_article
    links:
      - mariadb
    ports:
      - "8091:8091"
    networks:
      default:
        ipv4_address: 172.18.0.91
    working_dir: "/go/src/ddc_article"
    entrypoint: "./ddc_article"

  auth:
    extends:
      file: common-services.yml
      service: beego
    container_name: ddc_auth
    links:
      - mariadb
    ports:
      - "8083:8083"
    expose:
      - "2345"
    networks:
      default:
        ipv4_address: 172.18.0.83
    working_dir: "/go/src/ddc_authentication"
    entrypoint: "./ddc_authentication"

  # challenge:
  #   extends:
  #     file: common-services.yml
  #     service: beego
  #   container_name: ddc_challenge
  #   links:
  #     - mariadb
  #   ports:
  #     - "8092:8092"
  #   networks:
  #     default:
  #       ipv4_address: 172.18.0.92
  #   working_dir: "/go/src/ddc_challenge"
  #   entrypoint: "./ddc_challenge"

  notification:
    extends:
      file: common-services.yml
      service: beego
    container_name: ddc_notification
    links:
      - mariadb
    ports:
      - "8082:8082"
    networks:
      default:
        ipv4_address: 172.18.0.82
    working_dir: "/go/src/ddc_notification"
    entrypoint: "./ddc_notification"

  product:
    extends:
      file: common-services.yml
      service: beego
    container_name: ddc_product
    links:
      - mariadb
    ports:
      - "8084:8084"
    networks:
      default:
        ipv4_address: 172.18.0.84
    working_dir: "/go/src/ddc_product"
    entrypoint: "./ddc_product"

 # payment:
 #   extends:
 #     file: common-services.yml
 #     service: beego
 #   container_name: ddc_payment
 #   links:
 #     - mariadb
 #   ports:
 #     - "8087:8087"
 #   networks:
 #     default:
 #       ipv4_address: 172.18.0.87
 #   working_dir: "/go/src/ddc_payment"
 #   entrypoint: "./ddc_payment"

  profile:
    extends:
      file: common-services.yml
      service: beego
    container_name: ddc_profile
    links:
      - mariadb
    ports:
      - "8086:8086"
    networks:
      default:
        ipv4_address: 172.18.0.86
    working_dir: "/go/src/ddc_profile"
    entrypoint: "./ddc_profile"

  scheduler:
    extends:
      file: common-services.yml
      service: beego
    container_name: ddc_scheduler
    links:
      - mariadb
    ports:
      - "8088:8088"
    networks:
      default:
        ipv4_address: 172.18.0.88
    working_dir: "/go/src/ddc_scheduler"
    entrypoint: "./ddc_scheduler"

  shipping:
    extends:
      file: common-services.yml
      service: beego
    container_name: ddc_shipping
    links:
      - mariadb
    ports:
      - "8081:8081"
    networks:
      default:
        ipv4_address: 172.18.0.81
    working_dir: "/go/src/ddc_shipping"
    entrypoint: "./ddc_shipping"

  # event:
  #   extends:
  #     file: common-services.yml
  #     service: beego
  #   container_name: ddc_event
  #   links:
  #     - mariadb
  #   ports:
  #     - "8093:8093"
  #   networks:
  #     default:
  #       ipv4_address: 172.18.0.93
  #   working_dir: "/go/src/ddc_event"
  #   entrypoint: "./ddc_event"

  order:
    extends:
      file: common-services.yml
      service: beego
    container_name: ddc_order
    links:
      - mariadb
    ports:
      - "8085:8085"
    expose:
      - "18085"
    mem_limit: 400m
    networks:
      default:
        ipv4_address: 172.18.0.85
    working_dir: "/go/src/ddc_order"
    entrypoint: "./ddc_order"

  voucher:
    extends:
      file: common-services.yml
      service: beego
    container_name: ddc_voucher
    links:
      - mariadb
    ports:
      - "8089:8089"
    mem_limit: 400m
    networks:
      default:
        ipv4_address: 172.18.0.89
    working_dir: "/go/src/ddc_voucher"
    entrypoint: "./ddc_voucher"

  discount:
    extends:
      file: common-services.yml
      service: beego
    container_name: ddc_discount
    links:
      - mariadb
    ports:
      - "8094:8094"
    networks:
      default:
        ipv4_address: 172.18.0.94
    working_dir: "/go/src/ddc_discount"
    entrypoint: "./ddc_discount"

  #######################################
  # Redis
  #######################################
  redis:
    image: redis:alpine
    container_name: ddc_redis
    networks:
      default:
        ipv4_address: 172.18.0.254
    ports:
      - "6379:6379"
    mem_limit: 200m
    restart: unless-stopped


#######################################
# Volumes
#######################################
volumes:
  mariadb:
    driver: local
    driver_opts:
      type: bind
      device: /home/nath/mariadb/db
      o: bind
  gosrc:
    driver: local
    driver_opts:
      type: bind
      device: /home/nath/go/src
      o: bind
  gopkg:
    driver: local
    driver_opts:
      type: bind
      device: /home/nath/go/pkg
      o: bind

networks:
  default:
    external:
      name: dev
